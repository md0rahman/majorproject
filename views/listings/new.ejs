<!-- views/listings/new.ejs -->
<style>
  /* UPGRADED: ultra-realistic / premium polish — ONLY visual changes, NO markup/behavior modified */
  :root{
    --gold: #d4a300;
    --gold-dark: #b38b00;
    --muted: #6b7280;
    --muted-2: #94a3b8;
    --muted-3: #9aa3b2;
    --surface: #ffffff;
    --card-radius: 16px;
    --soft-shadow: 0 10px 30px rgba(16,24,40,0.06);
    --xl-shadow: 0 26px 80px rgba(16,24,40,0.10);
    --focus-ring: rgba(212,163,0,0.14);
    --glass-border: rgba(15,23,42,0.05);
    --accent: rgba(212,163,0,0.06);
    --input-height: 46px;
    --ui-gap: 12px;
    --radius-sm: 10px;
    --radius-lg: 14px;
    --ui-font: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial;
  }

  /* base typography */
  body { font-family: var(--ui-font); color: #0b1220; -webkit-font-smoothing:antialiased; -moz-osx-font-smoothing:grayscale; }
  .listing-card { font-size: 15px; line-height:1.45; }

  /* Page-level card */
  .listing-card {
    border-radius: var(--card-radius);
    overflow: hidden;
    border: 1px solid var(--glass-border);

    /* warm layered background */
    background:
      radial-gradient(circle at 10% 8%, rgba(255,255,255,0.92), rgba(255,255,255,0.6) 6%, transparent 22%),
      linear-gradient(180deg, #fffdfb 0%, rgba(212,163,0,0.02) 14%, #fbfcfe 48%, #f7fbff 100%);
    box-shadow: var(--xl-shadow);
    transition: transform .16s cubic-bezier(.2,.9,.28,1), box-shadow .16s ease;
    will-change: transform;
  }
  .listing-card:hover {
    transform: translateY(-6px);
    box-shadow: 0 44px 110px rgba(16,24,40,0.14);
  }

  /* header */
  .listing-card .card-header {
    padding: 1.05rem 1.5rem;
    border-bottom: 1px solid rgba(15,23,42,0.03);
    background: linear-gradient(90deg, rgba(212,163,0,0.035), transparent 72%);
  }
  .listing-card .card-header h3 {
    margin: 0;
    font-weight: 800;
    font-size: 1.16rem;
    letter-spacing: .2px;
    color: #081226;
  }
  .listing-card .card-header small {
    display:block;
    margin-top:.26rem;
    color:var(--muted);
    font-weight:600;
    font-size:.92rem;
  }

  .card-body { padding:1.45rem 1.5rem; }

  /* labels & inputs */
  .form-label {
    font-weight:700;
    color:#071124;
    font-size:.95rem;
    display:block;
    margin-bottom:.45rem;
  }

  .form-control {
    height: var(--input-height);
    border-radius:12px;
    border:1px solid #e6e9ee;
    padding:.6rem .9rem;
    background: linear-gradient(180deg,#ffffff,#fbfcfd);
    box-shadow: inset 0 3px 8px rgba(16,24,40,0.03);
    transition: box-shadow .12s ease, border-color .12s ease, transform .06s ease;
    font-size: .95rem;
    color:#0b1220;
    -webkit-appearance: none;
    -moz-appearance: none;
  }
  .form-control::placeholder { color:var(--muted-2); opacity:1; }
  .form-control:focus {
    outline: none;
    border-color: var(--gold);
    box-shadow: 0 12px 36px var(--focus-ring);
    transform: translateY(-1px);
  }

  textarea.form-control {
    min-height: 120px;
    resize: vertical;
    padding-top:.85rem;
    padding-bottom:.85rem;
  }

  /* helper text */
  .form-text { color:var(--muted); font-size:.88rem; margin-top:.36rem; display:block; }
  .field-note { color:var(--muted); font-size:.87rem; }

  /* file input wrapper — more tactile and realistic */
  .file-wrap { display:flex; gap:var(--ui-gap); align-items:center; }
  .file-thumb {
    width:148px; height:100px; border-radius:var(--radius-sm); overflow:hidden;
    background:linear-gradient(180deg,#fbfdff 0%, #f3f6fb 60%);
    border:1px solid rgba(15,23,42,0.03);
    display:flex; align-items:center; justify-content:center; color:#94a3b8; font-size:.98rem;
    box-shadow: 0 10px 26px rgba(16,24,40,0.05);
    flex-shrink:0;
    transition: transform .12s ease, box-shadow .12s ease, border-color .12s ease;
    position:relative;
    cursor:pointer;
  }
  .file-thumb:hover { transform: translateY(-3px); box-shadow: 0 20px 44px rgba(16,24,40,0.07); border-color: rgba(255,56,92,0.06); }

  /* icon inside thumb */
  .file-thumb i { font-size: 28px; color: rgba(74,85,104,0.72); pointer-events:none; }
  .file-thumb img { width:100%; height:100%; object-fit:cover; display:block; }

  /* file-meta */
  .file-meta { flex:1; display:flex; flex-direction:column; gap:6px; min-width:0; }
  .file-meta .file-name { font-weight:700; color:#071124; font-size:.93rem; white-space:nowrap; overflow:hidden; text-overflow:ellipsis; }
  .file-meta .file-sub { color:var(--muted); font-size:.86rem; }

  /* inputs row spacing */
  .row .col-md-4, .row .col-md-8 { margin-bottom:.85rem; }

  /* validation visuals */
  .is-invalid { border-color: #ef4444 !important; box-shadow:none !important; }
  .invalid-feedback { color:#b91c1c; font-size:.88rem; margin-top:.35rem; display:none; }
  .was-validated .is-invalid + .invalid-feedback { display:block; }

  /* refined primary button */
  .btn-primary {
    background: linear-gradient(90deg, var(--gold), var(--gold-dark));
    color:#071124;
    border:none;
    padding:.68rem 1.15rem;
    border-radius:12px;
    font-weight:800;
    box-shadow: 0 16px 40px rgba(179,139,0,0.12);
    transition: transform .12s cubic-bezier(.2,.9,.28,1), box-shadow .12s ease, opacity .12s ease;
  }
  .btn-primary:hover { transform: translateY(-2px); box-shadow: 0 28px 68px rgba(179,139,0,0.14); }
  .btn-primary:active { transform: translateY(0); opacity:.98; }
  .btn-primary[disabled] { opacity:.7; cursor:not-allowed; transform:none; box-shadow:none; }

  .btn-outline-secondary {
    border-radius:10px; border:1px solid rgba(15,23,42,0.06); color:#374151; background:transparent; padding:.62rem .9rem;
  }

  /* responsive */
  @media (max-width:576px) {
    .file-wrap { flex-direction:column; align-items:stretch; gap:10px; }
    .file-thumb{ width:100%; height:160px; }
    .btn-primary { width:100%; }
    .card-body { padding:1rem; }
  }

  /* footer microcopy */
  .form-footer-note { color:var(--muted); font-size:.85rem; margin-left:auto; }

  /* accessible focus */
  .form-control:focus-visible, .btn-primary:focus-visible, .file-thumb:focus-visible {
    outline: 3px solid rgba(212,163,0,0.08);
    outline-offset: 3px;
  }

  /* small tweaks for native file input */
  input[type="file"].form-control { font-size: .9rem; padding: .42rem .68rem; height: auto; cursor:pointer; }

</style>

<div class="row mt-4">
  <div class="col-lg-7 col-md-11 col-sm-10 mx-auto">
    <div class="card listing-card shadow-sm border-0 rounded-4 overflow-hidden">
      
      <div class="card-header text-black text-center py-3">
        <h3 class="mb-0 fw-bold">📢 Create A New Listing</h3>
        <small class="text-muted">Clear titles, good photos and accurate location increase bookings.</small>
      </div>

      <div class="card-body p-4"> 
        <!-- NOTE: form fields, names and action are unchanged — only UX & styling updated -->
        <form method="POST" action="/listings" enctype="multipart/form-data" class="needs-validation" id="listingForm" novalidate>
          
          <!-- Title -->
          <div class="mb-3">
            <label for="title" class="form-label">Title</label>
            <input
              type="text"
              name="listing[title]"
              id="title"
              placeholder="e.g. Cozy 1BR near central park with balcony"
              class="form-control"
              required
              autocomplete="off"
              aria-describedby="titleHelp"
            />
            <div id="titleHelp" class="form-text">Short and descriptive — include neighborhood or standout amenity.</div>
            <div class="invalid-feedback">Title is required.</div>
          </div>

          <!-- Description -->
          <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <textarea
              name="listing[description]"
              id="description"
              class="form-control"
              placeholder="Write a brief description (highlights, vibe, who it's good for)"
              rows="3"
              required
              autocomplete="off"
            ></textarea>
            <div class="invalid-feedback">Description is required.</div>
          </div>

          <!-- Image (improved look; same input name) -->
          <div class="mb-3">
            <label for="image" class="form-label">Upload Listing Image</label>
            <div class="file-wrap">
              <div class="file-thumb" id="fileThumb"><i class="fa-regular fa-image"></i></div>
              <div class="file-meta">
                <span class="file-name" id="fileLabel">No file selected</span>
                <span class="file-sub">Primary photo — JPG/PNG recommended. Keep file size ≤5MB for best UX.</span>
                <input
                  type="file"
                  name="listing[image]"
                  id="image"
                  class="form-control"
                  accept="image/*"
                  required
                  aria-describedby="imageHelp"
                  style="margin-top:.4rem;"
                />
                <div id="imageHelp" class="form-text">This image will be shown first on your listing card.</div>
                <div class="invalid-feedback">Image is required.</div>
              </div>
            </div>
          </div>

          <div class="row">
            <!-- Price -->
            <div class="mb-3 col-md-4">
              <label for="price" class="form-label">Price (₹)</label>
              <input
                type="number"
                name="listing[price]"
                id="price"
                placeholder="1200"
                class="form-control"
                required
                min="0"
                autocomplete="off"
              />
              <div class="invalid-feedback">Price should be valid.</div>
            </div>

            <!-- Country -->
            <div class="mb-3 col-md-8">
              <label for="country" class="form-label">Country</label>
              <input
                type="text"
                name="listing[country]"
                id="country"
                placeholder="India"
                class="form-control"
                required
                autocomplete="country-name"
              />
              <div class="invalid-feedback">Country is required.</div>
            </div>
          </div>

          <!-- Location -->
          <div class="mb-3">
            <label for="location" class="form-label">Location</label>
            <input
              type="text"
              name="listing[location]"
              id="location"
              placeholder="e.g. Bandra West, Mumbai"
              class="form-control"
              required
              autocomplete="address-level2"
            />
            <div class="form-text">We will geocode this location to place it on the map (exact address won't be public).</div>
            <div class="invalid-feedback">Location is required.</div>
          </div>

          <!-- Submit -->
          <div class="d-flex align-items-center gap-2">
            <button type="submit" class="btn btn-primary" id="submitBtn">➕ Add Listing</button>
            <a href="/listings" class="btn btn-outline-secondary">Cancel</a>
            <div class="ms-auto form-footer-note">All required fields must be filled.</div>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  (function () {
    'use strict';

    const form = document.getElementById('listingForm');
    const submitBtn = document.getElementById('submitBtn');
    const imageInput = document.getElementById('image');
    const fileThumb = document.getElementById('fileThumb');
    const fileLabel = document.getElementById('fileLabel');

    // preview small thumbnail and filename (UX only, uses same input)
    imageInput.addEventListener('change', function () {
      const f = this.files && this.files[0];
      if (!f) {
        fileThumb.textContent = 'Preview';
        fileLabel.textContent = 'No file selected';
        return;
      }
      // type check
      if (!f.type.startsWith('image/')) {
        fileThumb.textContent = 'Invalid file';
        fileLabel.textContent = f.name;
        this.classList.add('is-invalid');
        return;
      }
      // size hint
      if (f.size > 5 * 1024 * 1024) {
        this.classList.add('is-invalid');
        fileLabel.textContent = `${f.name} — Too large`;
      } else {
        this.classList.remove('is-invalid');
        // preview
        const reader = new FileReader();
        reader.onload = (e) => {
          const img = new Image();
          img.src = e.target.result;
          img.style.width = '100%';
          img.style.height = '100%';
          img.style.objectFit = 'cover';
          fileThumb.innerHTML = '';
          fileThumb.appendChild(img);
        };
        reader.readAsDataURL(f);
        fileLabel.textContent = `${f.name} · ${(Math.round(f.size/1024)).toLocaleString()} KB`;
      }
    });

    // form submit: client-side validation + prevent double submit
    form.addEventListener('submit', function (e) {
      // reset validation class for file
      imageInput.classList.remove('is-invalid');

      const file = imageInput.files && imageInput.files[0];
      let ok = true;
      if (!file) {
        imageInput.classList.add('is-invalid');
        ok = false;
      } else if (file.size > 5 * 1024 * 1024) {
        imageInput.classList.add('is-invalid');
        ok = false;
      }

      if (!form.checkValidity() || !ok) {
        e.preventDefault();
        e.stopPropagation();
        form.classList.add('was-validated');
        return;
      }

      // disable submit to prevent accidental double submission
      submitBtn.disabled = true;
      submitBtn.textContent = '⏳ Adding...';
    }, false);
  })();
</script>
